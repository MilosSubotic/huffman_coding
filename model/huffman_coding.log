Encoding...

Setting up data for decoding...
block: 0
in_data:
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6


Creating histogram...
histogram:
 0:  0
 1:  0
 2:  0
 3:  0
 4:  0
 5:  0
 6: 16
 7:  0
 8:  0
 9:  0
10:  0
11:  0
12:  0
13:  0
14:  0
15:  0


Preparing for sorting symbols by count...
sort_cnt:
 0: 31
 1: 31
 2: 31
 3: 31
 4: 31
 5: 31
 6: 16
 7: 31
 8: 31
 9: 31
10: 31
11: 31
12: 31
13: 31
14: 31
15: 31


Sorting symbols by count...
sort_cnt:
 6: 16
 0: 31
 1: 31
 2: 31
 3: 31
 4: 31
 5: 31
 7: 31
 8: 31
 9: 31
10: 31
11: 31
12: 31
13: 31
14: 31
15: 31


Creating leaves...
leaves:
 6: 16
 0: 31
 1: 31
 2: 31
 3: 31
 4: 31
 5: 31
 7: 31
 8: 31
 9: 31
10: 31
11: 31
12: 31
13: 31
14: 31
15: 31


Tracking depth of leaves on quasi-tree...
iter 0:
leaves:
 0: 31
 1: 31
 2: 31
 3: 31
 4: 31
 5: 31
 7: 31
 8: 31
 9: 31
10: 31
11: 31
12: 31
13: 31
14: 31
15: 31
31: 31
parents:
16: 47
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
31: 31
parents_end: 1
depth_tracker:
 0:  0
 1:  0
 2:  0
 3:  0
 4:  0
 5:  0
16:  1
 7:  0
 8:  0
 9:  0
10:  0
11:  0
12:  0
13:  0
14:  0
15:  0



Extracting bit-lengths of codes for symbols...
codes_len:
 0:  0
 1:  0
 2:  0
 3:  0
 4:  0
 5:  0
 6:  1
 7:  0
 8:  0
 9:  0
10:  0
11:  0
12:  0
13:  0
14:  0
15:  0


Counting same bit-lengths...
lens_cnt:
 0: 15
 1:  1
 2:  0
 3:  0
 4:  0


Preparing for sorting symbols by bit-lengths...
sort_len:
 0:  7
 1:  7
 2:  7
 3:  7
 4:  7
 5:  7
 6:  1
 7:  7
 8:  7
 9:  7
10:  7
11:  7
12:  7
13:  7
14:  7
15:  7


Sorting symbols by lengths...
sort_len:
 6:  1
 0:  7
 1:  7
 2:  7
 3:  7
 4:  7
 5:  7
 7:  7
 8:  7
 9:  7
10:  7
11:  7
12:  7
13:  7
14:  7
15:  7


Creating canonical code table...
codes_len:
 0: 0
 1: 0
 2: 0
 3: 0
 4: 0
 5: 0
 6: 1
 7: 0
 8: 0
 9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
code_table:
 0: 
 1: 
 2: 
 3: 
 4: 
 5: 
 6: 0
 7: 
 8: 
 9: 
10: 
11: 
12: 
13: 
14: 
15: 


Mirror codes for little endian encoding.
code_table:
 0:      
 1:      
 2:      
 3:      
 4:      
 5:      
 6:     0
 7:      
 8:      
 9:      
10:      
11:      
12:      
13:      
14:      
15:      


Packing canonical table...
stored_len: 24


Encoding and packing data...
Encoding:
iter 0:
sym:  6
code:     0

iter 1:
sym:  6
code:     0

iter 2:
sym:  6
code:     0

iter 3:
sym:  6
code:     0

iter 4:
sym:  6
code:     0

iter 5:
sym:  6
code:     0

iter 6:
sym:  6
code:     0

iter 7:
sym:  6
code:     0

iter 8:
sym:  6
code:     0

iter 9:
sym:  6
code:     0

iter 10:
sym:  6
code:     0

iter 11:
sym:  6
code:     0

iter 12:
sym:  6
code:     0

iter 13:
sym:  6
code:     0

iter 14:
sym:  6
code:     0

iter 15:
sym:  6
code:     0

stored_len: 40


last byte acc_len: 0
compression ratio: 0.625

enc_data:
0x01
0x00
0x60
0x00
0x00


Decoding...

Unpacking bit-lengths count...
lens_cnt:
 0:  0
 1:  1
 2:  0
 3:  0
 4:  0


Unpacking symbols and creating canonical code table...
codes_len:
 0: 0
 1: 0
 2: 0
 3: 0
 4: 0
 5: 0
 6: 1
 7: 0
 8: 0
 9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
code_table:
 0: 
 1: 
 2: 
 3: 
 4: 
 5: 
 6: 0
 7: 
 8: 
 9: 
10: 
11: 
12: 
13: 
14: 
15: 


Mirroring codes for little endian decoding...
code_table:
 0:      
 1:      
 2:      
 3:      
 4:      
 5:      
 6:     0
 7:      
 8:      
 9:      
10:      
11:      
12:      
13:      
14:      
15:      


Decoding data...
iter 0:
best_len:  1
best_code:     0
best_sym:  6

iter 1:
best_len:  1
best_code:     0
best_sym:  6

iter 2:
best_len:  1
best_code:     0
best_sym:  6

iter 3:
best_len:  1
best_code:     0
best_sym:  6

iter 4:
best_len:  1
best_code:     0
best_sym:  6

iter 5:
best_len:  1
best_code:     0
best_sym:  6

iter 6:
best_len:  1
best_code:     0
best_sym:  6

iter 7:
best_len:  1
best_code:     0
best_sym:  6

iter 8:
best_len:  1
best_code:     0
best_sym:  6

iter 9:
best_len:  1
best_code:     0
best_sym:  6

iter 10:
best_len:  1
best_code:     0
best_sym:  6

iter 11:
best_len:  1
best_code:     0
best_sym:  6

iter 12:
best_len:  1
best_code:     0
best_sym:  6

iter 13:
best_len:  1
best_code:     0
best_sym:  6

iter 14:
best_len:  1
best_code:     0
best_sym:  6

iter 15:
best_len:  1
best_code:     0
best_sym:  6

out_data:
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6
 6


Converting data to text...


Comparing input and output...
Match!


End.
